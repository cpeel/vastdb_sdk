variables:
  DOCKER_REGISTRY: 110450271409.dkr.ecr.eu-west-1.amazonaws.com
  ORION_PREFIX: $DOCKER_REGISTRY/dev/orion
  PYSDK_BUILDER_IMAGE: $ORION_PREFIX:vastdb-python-sdk-builder-latest
  PYSDK_IMAGE_PREFIX: $ORION_PREFIX:vastdb-python-sdk-pipe-$CI_PIPELINE_ID


Prebuild:
  stage: .pre
  script:
    - aws ecr get-login-password | docker login -u AWS --password-stdin https://$DOCKER_REGISTRY
    - docker build -f Dockerfile.prebuild -t $PYSDK_BUILDER_IMAGE .
    - docker push $PYSDK_BUILDER_IMAGE
  tags:
    - code-builder-small-shell


Build and upload:
  stage: build
  interruptible: true
  image: $PYSDK_BUILDER_IMAGE
  tags:
    - vast-dev-builder
  variables:
    VASTDB_APPEND_VERSION_SUFFIX: 'true'
  script:
    - python3 setup.py bdist_wheel
    - ./upload.sh
  artifacts:
    paths:
      - dist/


Check Python versions:
  stage: build
  interruptible: true
  image: $PYSDK_BUILDER_IMAGE
  tags:
    - vast-dev-builder
  variables:
    VASTDB_APPEND_VERSION_SUFFIX: 'true'
    PYSDK_IMAGE: ${PYSDK_IMAGE_PREFIX}-${PYTHON_VERSION}
  script:
    - echo "Building $PYSDK_IMAGE..."
    - docker build -f Dockerfile --build-arg BASE_IMAGE=python:${PYTHON_VERSION} -t $PYSDK_IMAGE .
    - docker push $PYSDK_IMAGE
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.9', '3.10', '3.11', '3.12']
